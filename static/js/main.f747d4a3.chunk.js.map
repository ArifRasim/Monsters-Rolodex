{"version":3,"sources":["components/cards/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","Search","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","data","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAEaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACA,qBAAMC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,iBAA2DC,IAAKL,EAAMG,QAAQC,KACrF,6BAAKJ,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCHTC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAsBA,QAASA,GAApBA,EAAQC,WCLdO,G,MAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACpB,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC2BCG,E,kDA7Bb,aAAe,IAAD,8BACZ,gBAWFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAAEC,YAAYF,EAAEG,OAAOC,SAXrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAET,SAAUkB,S,oBAK9C,WAAU,IAAD,EACsBC,KAAKN,MAA3Bb,EADA,EACAA,SAASU,EADT,EACSA,YACVU,EAAiBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAEA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAChG,OAEE,sBAAK9B,UAAU,MAAf,UACA,iDACE,cAAC,EAAD,CAAQW,YAAY,kBAAkBC,aAAce,KAAKf,eACzD,cAAC,EAAD,CAAUJ,SAAUoB,W,GAxBVI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f747d4a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.style.css\"\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n  <img  src={`https://robohash.org/${props.monster.id}?size=180x180`} alt={props.monster.id}></img>\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport {Card} from '../cards/card.component'\r\nimport \"./card-list..component.css\";\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id}monster={monster}></Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport './search.styles.css'\r\nexport const Search = ({placeholder,handleChange}) => (\r\n  <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  ></input>\r\n);\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { Search } from \"./components/search/search-component\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((data) => this.setState({ monsters: data }));\n  }\n  handleChange=(e)=>{\n    this.setState({ searchField:e.target.value})\n  }\n  render() {\n    const {monsters,searchField}=this.state\n    const filteredMonsters=monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n        <Search placeholder=\"Search monsters\" handleChange={this.handleChange}></Search>\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}